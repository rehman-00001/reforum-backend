{"version":3,"sources":["../../../backend/entities/user/api.js"],"names":["bcrypt","require","jwt","User","getFullProfile","checkAuth","JWT_KEY","process","env","userAPI","app","post","req","res","console","log","body","email","password","fullName","city","hash","hashedPassword","createdUser","avatarUrl","save","token","sign","userId","id","status","json","findOne","existingUser","send","compare","isValidPassword","get","params","username","then","result","error","_id","user","toObject","module","exports"],"mappings":"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","sourcesContent":["const bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\n\nconst User = require('./model');\nconst { getFullProfile } = require('./controller');\nconst checkAuth = require('../../utilities/check-auth');\nconst JWT_KEY = process.env.JWT_KEY;\n/**\n * user apis\n */\nconst userAPI = (app) => {\n  app.post('/api/user/signup', async (req, res) => {\n    console.log(req.body);\n    const { email, password, fullName, city } = req.body;\n    const hashedPassword = await bcrypt.hash(password, 12);\n\n    const createdUser = new User({\n      fullName,\n      email,\n      city,\n      avatarUrl: '',\n      password: hashedPassword,\n    });\n\n    await createdUser.save();\n\n    const token = jwt.sign(\n      { userId: createdUser.id, email: createdUser.email },\n      JWT_KEY\n    );\n\n    res\n      .status(201)\n      .json({ userId: createdUser.id, email: createdUser.email, token });\n  });\n\n  app.post('/api/user/login', async (req, res) => {\n    console.log(req.body);\n    const { email, password } = req.body;\n\n    const existingUser = await User.findOne({ email });\n    if (!existingUser) res.status(401).send('Incorrect credentials');\n\n    const isValidPassword = await bcrypt.compare(\n      password,\n      existingUser.password\n    );\n\n    if (!isValidPassword) {\n      res.status(401).send('Incorrect credentials');\n    }\n\n    const token = jwt.sign(\n      { userId: existingUser.id, email: existingUser.email },\n      JWT_KEY\n    );\n\n    res\n      .status(200)\n      .json({ userId: existingUser.id, email: existingUser.email, token });\n  });\n\n  // get user full profile\n  app.get('/api/user/profile/:username', (req, res) => {\n    if (checkAuth(req)) {\n      getFullProfile(req.params.username).then(\n        (result) => {\n          res.send(result);\n        },\n        (error) => {\n          res.send({ error });\n        }\n      );\n    }\n  });\n\n  // get authenticated user\n  app.get('/api/user/getUser', async (req, res) => {\n    console.log(('userId', req.userId));\n\n    if (checkAuth(req)) {\n      const user = await User.findOne({ _id: req.userId });\n      if (user) {\n        return res.status(200).json(user.toObject());\n      }\n    }\n    return res.send(null);\n  });\n};\n\nmodule.exports = userAPI;\n"],"file":"api.js"}