{"version":3,"sources":["../../../backend/entities/discussion/controller.js"],"names":["generateDiscussionSlug","require","getAllOpinions","getUser","Discussion","Opinion","getDiscussion","discussion_slug","discussion_id","Promise","resolve","reject","findObject","_id","findOne","populate","lean","exec","error","result","console","log","then","opinions","createDiscussion","discussion","newDiscussion","forum_id","forumId","forum","user_id","userId","user","title","date","Date","content","favorites","tags","pinned","save","toggleFavorite","findById","matched","i","length","String","slice","updatedDiscussion","updateDiscussion","deleteDiscussion","remove","deleted","module","exports"],"mappings":"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","sourcesContent":["const generateDiscussionSlug = require('../../utilities/tools')\n  .generateDiscussionSlug;\nconst getAllOpinions = require('../opinion/controller').getAllOpinions;\nconst getUser = require('../user/controller').getUser;\n\nconst Discussion = require('./model');\nconst Opinion = require('../opinion/model');\n\n/**\n * get a single discussion\n * @param  {String} discussion_slug\n * @param  {String} discussion_id\n * @return {Promise}\n */\nconst getDiscussion = (discussion_slug, discussion_id) => {\n  return new Promise((resolve, reject) => {\n    let findObject = {};\n    if (discussion_slug) findObject.discussion_slug = discussion_slug;\n    if (discussion_id) findObject._id = discussion_id;\n\n    Discussion.findOne(findObject)\n      .populate('forum')\n      .populate('user')\n      .lean()\n      .exec((error, result) => {\n        if (error) {\n          console.log(error);\n          reject(error);\n        } else if (!result) reject(null);\n        else {\n          // add opinions to the discussion object\n          getAllOpinions(result._id).then(\n            (opinions) => {\n              result.opinions = opinions;\n              resolve(result);\n            },\n            (error) => {\n              {\n                console.log(error);\n                reject(error);\n              }\n            }\n          );\n        }\n      });\n  });\n};\n\n/**\n * Create a new discussion\n * @param  {Object} discussion\n * @return {Promise}\n */\nconst createDiscussion = (discussion) => {\n  return new Promise((resolve, reject) => {\n    const newDiscussion = new Discussion({\n      forum_id: discussion.forumId,\n      forum: discussion.forumId,\n      user_id: discussion.userId,\n      user: discussion.userId,\n      discussion_slug: generateDiscussionSlug(discussion.title),\n      date: new Date(),\n      title: discussion.title,\n      content: discussion.content,\n      favorites: [],\n      tags: discussion.tags,\n      pinned: discussion.pinned,\n    });\n\n    newDiscussion.save((error) => {\n      if (error) {\n        console.log(error);\n        reject(error);\n      }\n\n      resolve(newDiscussion);\n    });\n  });\n};\n\n/**\n * toggle favorite status of discussion\n * @param  {ObjectId} discussion_id\n * @param  {ObjectId} user_id\n * @return {Promise}\n */\nconst toggleFavorite = (discussion_id, user_id) => {\n  return new Promise((resolve, reject) => {\n    Discussion.findById(discussion_id, (error, discussion) => {\n      if (error) {\n        console.log(error);\n        reject(error);\n      } else if (!discussion) reject(null);\n      else {\n        // add or remove favorite\n        let matched = null;\n        for (let i = 0; i < discussion.favorites.length; i++) {\n          if (String(discussion.favorites[i]) === String(user_id)) {\n            matched = i;\n          }\n        }\n\n        if (matched === null) {\n          discussion.favorites = [...discussion.favorites, user_id];\n        } else {\n          discussion.favorites = [\n            ...discussion.favorites.slice(0, matched),\n            ...discussion.favorites.slice(\n              matched + 1,\n              discussion.favorites.length\n            ),\n          ];\n        }\n\n        discussion.save((error, updatedDiscussion) => {\n          if (error) {\n            console.log(error);\n            reject(error);\n          }\n          resolve(updatedDiscussion);\n        });\n      }\n    });\n  });\n};\n\nconst updateDiscussion = (forum_id, discussion_slug) => {\n  // TODO: implement update feature\n};\n\nconst deleteDiscussion = (discussion_slug) => {\n  return new Promise((resolve, reject) => {\n    // find the discussion id first\n    Discussion.findOne({ discussion_slug }).exec((error, discussion) => {\n      if (error) {\n        console.log(error);\n        reject(error);\n      }\n\n      // get the discussion id\n      const discussion_id = discussion._id;\n\n      // remove any opinion regarding the discussion\n      Opinion.remove({ discussion_id }).exec((error) => {\n        if (error) {\n          console.log(error);\n          reject(error);\n        }\n\n        // finally remove the discussion\n        else {\n          Discussion.remove({ discussion_slug }).exec((error) => {\n            if (error) {\n              console.log(error);\n              reject(error);\n            } else {\n              resolve({ deleted: true });\n            }\n          });\n        }\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  getDiscussion,\n  createDiscussion,\n  updateDiscussion,\n  deleteDiscussion,\n  toggleFavorite,\n};\n"],"file":"controller.js"}