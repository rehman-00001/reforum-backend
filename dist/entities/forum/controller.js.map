{"version":3,"sources":["../../../backend/entities/forum/controller.js"],"names":["asyncEach","require","Forum","Discussion","getAllOpinions","getUser","getAllForums","Promise","resolve","reject","find","exec","error","results","getDiscussions","forum_id","pinned","console","log","populate","lean","discussions","length","eachDiscussion","callback","_id","then","opinions","opinion_count","module","exports"],"mappings":"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","sourcesContent":["const asyncEach = require('async/each');\n\n// models\nconst Forum = require('./model');\nconst Discussion = require('../discussion/model');\n\n// controllers\nconst getAllOpinions = require('../opinion/controller').getAllOpinions;\nconst getUser = require('../user/controller').getUser;\n\n/**\n * get all forums list\n * @type {Promise}\n */\nconst getAllForums = () => {\n  return new Promise((resolve, reject) => {\n    Forum.find({}).exec((error, results) => {\n      if (error) {\n        reject(error);\n      } else if (!results) reject(null);\n      else {\n        resolve(results);\n      }\n    });\n  });\n};\n\n/**\n * get discussions of a forum\n * @param  {ObjectId} forum_id\n * @param  {Boolean} pinned\n * @return {Promise}\n */\nconst getDiscussions = (forum_id, pinned) => {\n  return new Promise(async (resolve, reject) => {\n    // match discussion id and pinned status\n    console.log('forumid: ' + forum_id);\n    Discussion.find({ forum_id })\n      .populate('forum')\n      .populate('user')\n      .lean()\n      .exec((error, discussions) => {\n        if (error) {\n          console.error(error);\n          reject(error);\n        } else if (!discussions) {\n          reject(null);\n        } else {\n          console.log('Discussions count: ' + discussions.length);\n          // attach opinion count to each discussion\n          asyncEach(\n            discussions,\n            (eachDiscussion, callback) => {\n              // add opinion count\n              getAllOpinions(eachDiscussion._id).then(\n                (opinions) => {\n                  // add opinion count to discussion doc\n                  eachDiscussion.opinion_count = opinions ? opinions.length : 0;\n                  callback();\n                },\n                (error) => {\n                  console.error(error);\n                  callback(error);\n                }\n              );\n            },\n            (error) => {\n              if (error) {\n                console.error(error);\n                reject(error);\n              } else resolve(discussions);\n            }\n          );\n        }\n      });\n  });\n};\n\nmodule.exports = {\n  getAllForums,\n  getDiscussions,\n};\n"],"file":"controller.js"}